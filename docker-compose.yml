version: '3.8'

services:
  # Ubuntu service with /codes volume
  ubuntu:
    image: ubuntu:latest
    volumes:
      - ./codes:/codes
      - ./app:/app 
    entrypoint: ["/bin/bash", "-c", ". /app/setup_cron.sh && tail -f /var/log/cron.log"]  # Use the setup_cron.sh script for initialization

  # Postgres service
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: root  
      POSTGRES_PASSWORD: 12345  
      POSTGRES_DB: test 
      POSTGRES_ARCHIVE_COMMAND: 'cp %p /pg_archives/%f'  # Command to copy WALs
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data  # full backup + wal archiving Persistent storage for Postgres data
      - ./create_table.sql:/docker-entrypoint-initdb.d/create_table.sql

  # Zookeeper service
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # Kafka service (Zookeeper included)
  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT : zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      stop_grace_period: 10s
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092

  # Consumer 1
  consumer1:
    image: python:3.10
    working_dir: /codes
    volumes:
      - ./codes:/codes
    command: ['/bin/bash', '-c', 'pip3 install kafka-python && python3 consumer1.py']  

  # Consumer 2 
  consumer2:
    image: python:3.10
    working_dir: /codes
    volumes:
      - ./codes:/codes
    command: ['/bin/bash', '-c', 'pip3 install kafka-python && python3 consumer2.py'] 

  # Consumer 3 
  consumer3:
    image: python:3.10
    working_dir: /codes
    volumes:
      - ./codes:/codes
    command: ['/bin/bash', '-c', 'pip3 install kafka-python psycopg2 && python3 consumer3.py']  # Replace topic and script name

volumes:
  postgres-data: {}  # Define persistent storage for Postgres data
  app_scripts:

